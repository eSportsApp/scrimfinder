generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model bannedUsers {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
  reason String?
}

model guilds {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  guildId String @unique
  rssChannelId String?
  rssGtoIid String[]
  rssDtoFid String[]
  //Warmup Searches
  warmuprssChannelId String?
}


model users {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
  username String?
  rssClan String?
  rssclass String?
  messages message[]
  drafts UserDraft[]
}

model Draft {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  time   String?
  maps String?
  extraInfo String?
  users     UserDraft[]
}

model UserDraft {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String @db.ObjectId
  draftId String @db.ObjectId
  users   users   @relation(fields: [userId], references: [id])
  draft   Draft   @relation(fields: [draftId], references: [id])
}

model badwords{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  Word String @unique
}

model blGuilds {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  guildId String @unique
  reason String?
}

model datas {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  Scrimsserched Int?
  averagemapecount Int?
  allmapecount Int?

}

model message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String?
  messageIds String[]
  channelIds String[]
  guildIds String[]
  createdAt DateTime @default(now())
  usersId String @map("user_id") @db.ObjectId
  user users @relation(fields: [usersId], references: [id])
}

model giveaway{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  guildId String @unique
  userId String @unique

}
//New thing added run 
//npx prisma generate